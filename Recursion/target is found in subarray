#include <bits/stdc++.h>
using namespace std;
int a[3]={1,2,3};
int n=3;
void bin(int n,string s)
{
    if(s.length()==n)
    {
        int sum=0,target=3;
        vector<int> v;
       for(int i=0;i<s.length();i++)
       {
          if(s[i]=='1') 
          {
              sum+=a[i]; 
              v.push_back(a[i]);
          }
       }
       if(sum==target)
       {
          for(auto x:v) cout<<x<<" "; cout<<endl;
       }
       return;
    }
    bin(n,s+"0");
    bin(n,s+"1");
}
int main()
{
   bin(n,"");
}







#include<bits/stdc++.h>
using namespace std;
bool status=false;
void target(int a[],int n,int tar)
{
    if(n<0) 
    {
        if(tar==0) 
        { 
            status=true;
            
        }
        return;
    }
    target(a,n-1,tar-a[n]);
    target(a,n-1,tar);
}
int main()
{
    int a[4]={1,2,4,6};
    int n=4;
    int tar=13;
    target(a,n-1,tar);
    cout<<status;
}





#include<bits/stdc++.h>
using namespace std;
bool status=false;
int arr[1001][1001];
bool target(int a[],int index,int n,int tar)
{
    if(tar<0) return false;
    if(arr[tar][index]!=-1) return arr[tar][index];
    cout<<"(tar,I)= "<<"("<<tar<<","<<index<<")"<<"\n";
    if(index==n) 
    {
        if(tar==0) 
        { 
            cout<<"found at (tar,I)= "<<"("<<tar<<","<<index<<")"<<"\n";
            return true;
        }
        return false;
    }
    bool left=target(a,index+1,n,tar-a[index]);
    bool right=target(a,index+1,n,tar);
    arr[tar][index]=left || right;
    return left || right;
}
int main()
{
    memset(arr,-1,sizeof(arr));
    int a[5]={3,4,5,6,11};
    int n=5;
    int tar=14,index=0;
    cout<<target(a,index,n-1,tar);
    for(int i=0;i<1001;i++)
    {
        for(int j=0;j<1001;j++)
            {
                cout<<arr[i][j];
            }
    }
}
